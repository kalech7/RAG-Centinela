\begin{Verbatim}[commandchars=\\\{\}]
FUN lematizar\PYGZus{}spacy():
  df ← cargar \PYGZdq{}corpus\PYGZus{}token\PYGZus{}nostop.parquet\PYGZdq{}; assert \PYGZdq{}text\PYGZus{}for\PYGZus{}embed\PYGZdq{}

  cargar nlp\PYGZus{}es (es\PYGZus{}core\PYGZus{}news\PYGZus{}sm) y nlp\PYGZus{}en (en\PYGZus{}core\PYGZus{}web\PYGZus{}sm) sin parser/ner/textcat
  is\PYGZus{}es(txt): True si tiene acentos o palabras \PYGZob{}de, la, el, y, en, ...\PYGZcb{}

  idx\PYGZus{}es ← filas donde is\PYGZus{}es(text\PYGZus{}for\PYGZus{}embed); idx\PYGZus{}en ← resto
  lema(doc): join(lemma\PYGZus{}.lower() si ≠ \PYGZdq{}\PYGZhy{}PRON\PYGZhy{}\PYGZdq{} else text.lower())

  text\PYGZus{}lemma[idx\PYGZus{}es] ← map\PYGZus{}pipe(nlp\PYGZus{}es, df[idx\PYGZus{}es].text\PYGZus{}for\PYGZus{}embed, batch=512)
  text\PYGZus{}lemma[idx\PYGZus{}en] ← map\PYGZus{}pipe(nlp\PYGZus{}en, df[idx\PYGZus{}en].text\PYGZus{}for\PYGZus{}embed, batch=512)
  df[\PYGZdq{}text\PYGZus{}lemma\PYGZdq{}] ← text\PYGZus{}lemma.fillna(\PYGZdq{}\PYGZdq{})


\end{Verbatim}
